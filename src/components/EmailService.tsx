import React, { useState } from 'react';
import { Learner, EmailSummary } from '../types/attendance';
import { Mail, Send, CheckCircle } from 'lucide-react';

interface EmailServiceProps {
  learners: Learner[];
  onEmailSent: () => void;
}

export const EmailService: React.FC<EmailServiceProps> = ({ learners, onEmailSent }) => {
  const [isSending, setIsSending] = useState(false);
  const [emailSent, setEmailSent] = useState(false);

  const generateEmailContent = (summary: EmailSummary): string => {
    const date = new Date().toLocaleDateString('en-US', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });

    return `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px 10px 0 0; text-align: center;">
          <h1 style="margin: 0; font-size: 28px; font-weight: bold;">📚 Daily Attendance Report</h1>
          <p style="margin: 10px 0 0 0; font-size: 16px; opacity: 0.9;">${date}</p>
        </div>
        
        <div style="background: white; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 20px; margin-bottom: 30px;">
            <div style="text-align: center; padding: 15px; background: #f0f9ff; border-radius: 8px;">
              <div style="font-size: 24px; font-weight: bold; color: #1e40af;">${summary.totalLearners}</div>
              <div style="color: #64748b; font-size: 14px;">Total Students</div>
            </div>
            <div style="text-align: center; padding: 15px; background: #f0fdf4; border-radius: 8px;">
              <div style="font-size: 24px; font-weight: bold; color: #16a34a;">${summary.attending}</div>
              <div style="color: #64748b; font-size: 14px;">✅ Present</div>
            </div>
            <div style="text-align: center; padding: 15px; background: #fef2f2; border-radius: 8px;">
              <div style="font-size: 24px; font-weight: bold; color: #dc2626;">${summary.absent}</div>
              <div style="color: #64748b; font-size: 14px;">❌ Absent</div>
            </div>
            <div style="text-align: center; padding: 15px; background: #fffbeb; border-radius: 8px;">
              <div style="font-size: 24px; font-weight: bold; color: #d97706;">${summary.excused}</div>
              <div style="color: #64748b; font-size: 14px;">⏰ Excused</div>
            </div>
          </div>
          
          <div style="background: #f8fafc; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
            <div style="font-size: 18px; font-weight: bold; color: #1e293b; margin-bottom: 10px;">📊 Attendance Rate</div>
            <div style="background: #e2e8f0; height: 8px; border-radius: 4px; overflow: hidden;">
              <div style="background: linear-gradient(90deg, #10b981, #059669); height: 100%; width: ${Math.round((summary.attending / summary.totalLearners) * 100)}%; transition: width 0.3s ease;"></div>
            </div>
            <div style="text-align: center; margin-top: 8px; font-weight: bold; color: #059669;">
              ${Math.round((summary.attending / summary.totalLearners) * 100)}%
            </div>
          </div>
          
          <h3 style="color: #1e293b; margin-bottom: 15px; font-size: 18px;">👥 Student Details</h3>
          <div style="background: white; border: 1px solid #e2e8f0; border-radius: 8px; overflow: hidden;">
            ${summary.learners.map(learner => `
              <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px 16px; border-bottom: 1px solid #f1f5f9;">
                <span style="font-weight: 500; color: #1e293b;">${learner.name}</span>
                <span style="padding: 4px 12px; border-radius: 20px; font-size: 12px; font-weight: 500; ${
                  learner.status === 'attending' ? 'background: #dcfce7; color: #166534;' :
                  learner.status === 'absent' ? 'background: #fecaca; color: #991b1b;' :
                  'background: #fef3c7; color: #92400e;'
                }">
                  ${learner.status === 'attending' ? '✅ Present' :
                    learner.status === 'absent' ? '❌ Absent' :
                    '⏰ Excused Absence'}
                </span>
              </div>
            `).join('')}
          </div>
          
          <div style="margin-top: 30px; padding: 20px; background: #f8fafc; border-radius: 8px; text-align: center;">
            <p style="margin: 0; color: #64748b; font-size: 14px;">
              Generated by BYOA Attendance Tracker • ${new Date().toLocaleString()}
            </p>
          </div>
        </div>
      </div>
    `;
  };

  const sendEmail = async () => {
    setIsSending(true);
    
    const summary: EmailSummary = {
      date: new Date().toISOString(),
      totalLearners: learners.length,
      attending: learners.filter(l => l.status === 'attending').length,
      absent: learners.filter(l => l.status === 'absent').length,
      excused: learners.filter(l => l.status === 'excused').length,
      learners
    };

    try {
      // For demo purposes, we'll simulate sending an email
      // In a real app, you'd integrate with an email service like EmailJS, SendGrid, etc.
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Simulate email sending
      console.log('Email content:', generateEmailContent(summary));
      console.log('Would send to: tobin@musttry.it');
      
      setEmailSent(true);
      onEmailSent();
    } catch (error) {
      console.error('Failed to send email:', error);
    } finally {
      setIsSending(false);
    }
  };

  if (emailSent) {
    return (
      <div className="card bg-success-50 border-success-200">
        <div className="flex items-center justify-center space-x-2 text-success-600">
          <CheckCircle className="w-6 h-6" />
          <span className="text-lg font-semibold">Email sent successfully!</span>
        </div>
        <p className="text-center text-success-700 mt-2">
          Attendance report has been sent to tobin@musttry.it
        </p>
      </div>
    );
  }

  return (
    <div className="card bg-primary-50 border-primary-200">
      <div className="flex items-center space-x-2 mb-4">
        <Mail className="w-6 h-6 text-primary-600" />
        <h3 className="text-lg font-semibold text-primary-800">Send Email Summary</h3>
      </div>
      
      <p className="text-gray-600 mb-4">
        Send a formatted attendance report to tobin@musttry.it
      </p>
      
      <button
        onClick={sendEmail}
        disabled={isSending}
        className="btn-primary w-full flex items-center justify-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed"
      >
        {isSending ? (
          <>
            <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
            <span>Sending...</span>
          </>
        ) : (
          <>
            <Send className="w-4 h-4" />
            <span>Send Email Report</span>
          </>
        )}
      </button>
    </div>
  );
};
